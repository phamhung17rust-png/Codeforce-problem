#include<bits/stdc++.h>
using namespace std;
char c[101000];
int p2[101000],jc[100100],ij[101000];
const int mod=998244353,G=3,GI=(mod+1)/3;
int qpow(int a,int b){
	int c=1;
	for(;b;b>>=1){
		if(b&1)c=1ll*a*c%mod;
		a=1ll*a*a%mod;
	}
	return c;
}
#define pb push_back
#define O(x) ((x<mod)?x:(x-mod))
int C(int a,int b){if(a<b)return 0;return 1ll*jc[a]*ij[b]%mod*ij[a-b]%mod;}
int lb[1<<20],L,wi[1<<21][2];
void init(int n){
	L=1;while(L<=n)L<<=1;
	for(int i=0;i<L;i++)lb[i]=(lb[i>>1]>>1)|((i&1)?(L>>1):0);
}
void NTT(int *a,int fl){
	for(int i=0;i<L;i++)if(i<lb[i])swap(a[i],a[lb[i]]);
	for(int o=1;o<L;o<<=1){
		for(int i=0;i<L;i+=(o<<1))for(int j=0;j<o;j++){
			int x=a[i+j],y=1ll*a[i+j+o]*wi[j+o][fl]%mod;
			a[i+j]=O(x+y),a[i+j+o]=O(x+mod-y);
		}
	}
	if(!fl){
		int I=qpow(L,mod-2);
		for(int i=0;i<L;i++)a[i]=1ll*a[i]*I%mod;
	}
}
int q[101000],p[201000];
int fz1[1<<20],fz2[1<<20];
void cdq(int l,int r,vector<int>f){
	if(l==r){p[l]=f[0];return;}
	int mid=(l+r)>>1,e=mid-l+1;
	vector<int>f_;
	for(int i=-(mid-l);i<=(mid-l);i++)f_.pb(f[i+(r-l)]);
	cdq(l,mid,f_);
	init(2*(r-l)+2*e+1);
	for(int i=0;i<L;i++)fz1[i]=fz2[i]=0;
	for(int i=0;i<=2*(r-l);i++)fz1[i]=f[i];
	for(int i=0;i<=e;i++)fz2[i*2]=C(e,i);
	//-e-(r-l)
	NTT(fz1,1),NTT(fz2,1);
	for(int i=0;i<L;i++)fz1[i]=1ll*fz1[i]*fz2[i]%mod;
	NTT(fz1,0);
	int e2=r-(mid+1);
	f_.clear();
	int B=-e-(r-l);
	for(int i=-e2;i<=e2;i++){
		assert(i>=B);
		f_.pb(fz1[i-B]);
	}
	cdq(mid+1,r,f_);
}
void sieve(int n){
	jc[0]=ij[0]=1;
	for(int i=1;i<=n;i++)jc[i]=1ll*i*jc[i-1]%mod,ij[i]=qpow(jc[i],mod-2);
	p2[0]=1;
	for(int i=1;i<=n;i++)p2[i]=2*p2[i-1]%mod;
	for(int i=0;i<=n;i++)q[i]=C(i,i/2);
	vector<int>ce;
	for(int i=0;i<=n*2;i++)ce.pb(0);
	for(int i=1;i<=n+1;i++){
		int p=i-1,z=i*2+2;
		while(p>=-n)p-=z;p+=z;
		while(p<=n)ce[p+n]++,p+=z;
		p=i+1;
		while(p>=-n)p-=z;p+=z;
		while(p<=n)ce[p+n]--,p+=z;
	}
	for(int i=0;i<=n*2;i++)(ce[i]+=mod)%=mod;
	cdq(0,n,ce);
}
int dp[101000],n;
void cdq2(int l,int r){
	if(l==r){
		if(c[l]=='0'){(dp[l]+=q[l-1])%=mod;dp[l]=(mod-dp[l])%mod;}
		else dp[l]=0;
		return;
	}
	int mid=(l+r)>>1;
	cdq2(l,mid);
	init(mid-l+1+(r-l+1));
	for(int i=0;i<L;i++)fz1[i]=fz2[i]=0;
	for(int i=l;i<=mid;i++)fz1[i-l]=dp[i];
	for(int i=1;i<=r-l;i++)fz2[i]=p[i-1];
	NTT(fz1,1),NTT(fz2,1);
	for(int i=0;i<L;i++)fz1[i]=1ll*fz1[i]*fz2[i]%mod;
	NTT(fz1,0);
	for(int i=mid+1;i<=r;i++)dp[i]=O(dp[i]+fz1[i-l]);
	cdq2(mid+1,r);
}
int Sol(){
	memset(dp,0,sizeof(dp));
	cdq2(1,n);
	//for(int j=1;j<i;j++)(dp[i]+=1ll*dp[j]*p[i-j-1]%mod)%=mod;
	int ans=0;
	for(int i=1;i<=n;i++)(ans+=1ll*dp[i]*q[n-i]%mod)%=mod;
	return (mod-ans)%mod;
}
int main(){
	for(int z=0;z<2;z++)for(int o=1;o<(1<<20);o<<=1){
		int Wn=qpow(z?G:GI,(mod-1)/(o<<1));
		for(int i=0,w=1;i<o;i++,w=1ll*w*Wn%mod)wi[o+i][z]=w;
	}
	scanf("%d%s",&n,c+1);
	sieve(n);
	int ans=p2[n];
	(ans-=Sol())%=mod;
	for(int i=1;i<=n;i++)c[i]='0'+'1'-c[i];
	(ans-=Sol())%=mod;
	return printf("%d",(ans+mod)%mod),0;
}
