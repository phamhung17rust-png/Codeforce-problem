
#include <bits/stdc++.h>
using namespace std;
typedef long long ll;
const int N=1000013;
vector<tuple<int,int,int>>mp[N];
int vis[N][8],n,m,_;
void solve() {char ch;
    ll g[3]={},ans=1e9,g_[3]={};
    cin>>n>>m>>_;
    for(int i=1;i<=n;i++)mp[i].clear(),memset(vis[i],0,sizeof vis[i]);
    for(int x,y,z,i=1;i<=m;i++)cin>>x>>y>>z>>ch,_=(ch>'b')+(ch>'g'),mp[x].emplace_back(y,z,_),mp[y].emplace_back(x,z,_),g[_]=gcd(g[_],z*2);
    queue<pair<int,int>>q;q.emplace(1,0);
    while(!q.empty()) {
        auto[x,b]=q.front();
        q.pop();
        if(!vis[x][b]){
            vis[x][b]=1;
            for(auto[i,l,k]:mp[x])q.emplace(i,((l%g[k])!=0)<<k^b);
        }
    }
    for(int i=0;i<3;i++)g_[i]=gcd(g[i],lcm(g[(i+1)%3],g[(i+2)%3]));
    for(int b=0;b<8;b++)if(vis[n][b]){
        ll f[3]={};
        for(int i=0;i<3;i++)f[i]=(b>>i&1)*g[i]/2;
        for(int i=0,j=1,k=2;i<3;i++,(++j)%=3,(++k)%=3)for(ll o=0;o<__gcd(g[j],g[k]);o++)
            ans=min(ans,max((o*g_[i]+f[i]+f[j])%g_[j],(o*g_[i]+f[i]+f[k])%g_[k]));
    }
    cout<<ans<<'\n';
}

int main() {
    ios::sync_with_stdio(false);
    int T=1;
    cin>>T;
    while(T--)solve();
}