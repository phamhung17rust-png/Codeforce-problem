#include<bits/stdc++.h>
using namespace std;
#define N 1000006
#define mo 1000000007
int T,n,m,ans,a[N],pos[N];
int l1[N],r1[N],l2[N],r2[N],f1[N],f2[N],sum[N];
inline int ADD(int x,int y) {x+=y; return x<mo?x:x-mo;}
int J[N],V[N];
inline void Jinit() 
{
	J[0]=1; for(int i=1;i<N;++i) J[i]=1ll*J[i-1]*i%mo;
	V[0]=V[1]=1; for(int i=2;i<N;++i) V[i]=1ll*(mo-mo/i)*V[mo%i]%mo;
	for(int i=2;i<N;++i) V[i]=1ll*V[i]*V[i-1]%mo;
}
inline int C(int x,int y) {if(x<y||y<0) return 0; return 1ll*J[x]*V[y]%mo*V[x-y]%mo;}
inline int SUM(int x,int y) {x=max(x,0); y=min(y,n-2); if(x>y) return 0; return ADD(sum[y],(x?mo-sum[x-1]:0));}
inline bool CHK(int x,int y) {if(x<=y) return x+y<=n+1; else return x+y>n+1;}
inline int CLC(int l,int r,int x,int y) {return ADD(ADD(C(l+r,l),mo-C(l+r,x-1+r)),mo-C(l+r,y+1+r));}
inline int MOV(int l1,int r1,int l2,int r2)
{
	int l=(l1-l2+n)%n,r=(r2-r1+n)%n;
	if((l+r>=n)||(!CHK(l2,r2))) return 0;
	if(l1<=r1) return CLC(l,r,l1+r1-n-1,l1+r1-2);
	return CLC(l,r,-n,l1+r1-n-2);
}
inline int SOL()
{
	m=0;
	for(int i=1;i<=n;++i) pos[i]=0;
	for(int i=1;i<=n;++i) if(a[i]>0) pos[a[i]]=((i&1)?(i+1>>1):n-i/2+1);
	for(int i=1;i<=n;++i) if(pos[i])
	{
		if(i==1) ++m,l1[m]=r1[m]=l2[m]=r2[m]=pos[i],f1[m]=1,f2[m]=0;
		else
		{
			l1[++m]=pos[i]%n+1,r1[m]=(pos[i]+i-2)%n+1;
			l2[m]=(pos[i]+n-i)%n+1,r2[m]=(pos[i]+n-2)%n+1;
			f1[m]=f2[m]=0;
			if(m==1) for(int j=1;j<=(n+1>>1);++j) f1[m]=ADD(f1[m],MOV(j,j,l1[m],r1[m])),f2[m]=ADD(f2[m],MOV(j,j,l2[m],r2[m]));
			else 
			{
				f1[m]=1ll*f1[m-1]*MOV(l1[m-1],r1[m-1],l1[m],r1[m])%mo;
				f1[m]=(f1[m]+1ll*f2[m-1]*MOV(l2[m-1],r2[m-1],l1[m],r1[m]))%mo;
				f2[m]=1ll*f1[m-1]*MOV(l1[m-1],r1[m-1],l2[m],r2[m])%mo;
				f2[m]=(f2[m]+1ll*f2[m-1]*MOV(l2[m-1],r2[m-1],l2[m],r2[m]))%mo;
			}
			l1[m]=r2[m]=pos[i];
		}
		if(i<n)
		{
			if(!CHK(l1[m],r1[m])) f1[m]=0;
			if(!CHK(l2[m],r2[m])) f2[m]=0;
		}
	}
	if(pos[n]) return f1[m];
	if(m)
	{
		int ans=0;
		for(int i=(n+1>>1)+1;i<=n;++i)
		{
			ans=(ans+1ll*f1[m]*MOV(l1[m],r1[m],i%n+1,(i+n-2)%n+1))%mo;
			ans=(ans+1ll*f2[m]*MOV(l2[m],r2[m],i%n+1,(i+n-2)%n+1))%mo;
		}
		return ans;
	}
	int ans=0; sum[0]=1;
	for(int i=1;i<=n-2;++i) sum[i]=ADD(sum[i-1],C(n-2,i));
	for(int i=1;i<=(n+1>>1);++i) ans=ADD(ans,ADD(SUM((n+1>>1)-i,n-i-1),ADD(mo-SUM(i-n/2-2,i-3),mo-SUM(i+(n+1>>1)-1,i+n-2))));
	return ans;
}
int main()
{
	// freopen("a.in","r",stdin);
	Jinit(); cin>>T; 
	while(T--)
	{
		cin>>n; for(int i=1;i<=n;++i) cin>>a[i];
		ans=SOL();
		for(int i=1;i<=n;++i) if(a[i]>0) a[i]=n-a[i]+1;
		cout<<ADD(ans,SOL())<<endl;
	}
	return 0;
}