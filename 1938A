
#include<bits/stdc++.h>
using namespace std; using ll = long long;
#define For(i, j, k) for ( int i = (j) ; i <= (k) ; i++ )
#define Fol(i, j, k) for ( int i = (j) ; i >= (k) ; i-- )
constexpr char c[] = "AP";
int a[2], n, m, cnts[2], cntt[2], cnt, o, p, q, r; char s[100009], t[100009];
vector < tuple < char, char, int > > ans;
//this is firon
inline void add(int p)
{
	ans.emplace_back('+', s[p], p);
	Fol(i, n, p + 1) s[i + 2] = s[i]; s[p + 1] = s[p], s[p + 2] = s[p] ^= c[0] ^ c[1], n += 2;
}
inline void sub(int p)
{
	ans.emplace_back('-', s[p], p);
	int d = a[s[p] == c[1]]; n -= d; For(i, p, n) s[i] = s[i + d];
}
inline void work()
{
	cin >> a[0] >> a[1], ans.clear();
	{ string _; cin >> _, n = (int)_.size(), copy(_.begin(), _.end(), s + 1); }
	{ string _; cin >> _, m = (int)_.size(), copy(_.begin(), _.end(), t + 1); }
	cnts[0] = cnts[1] = cntt[0] = cntt[1] = 0;
	For(i, 1, n) cnts[s[i] == c[1]]++; For(i, 1, m) cntt[t[i] == c[1]]++;
	For(_, 0, 1) if ( ~a[_] & 1 && ( cnts[_] - cntt[_] ) & 1 ) { cout << "-1\n"; return; }
	if ( !( a[0] & 3 ) && !( a[1] & 3 ) )
	{
		cnt = ( n - m ) >> 1;
		For(i, 1, n) if ( s[i] == c[1] ) cnt += count(s + i + 1, s + n + 1, c[0]);
		For(i, 1, m) if ( t[i] == c[1] ) cnt += count(t + i + 1, t + m + 1, c[0]);
		if ( cnt & 1 ) { cout << "-1\n"; return; }
	}
	For(i, 1, m) if ( i > n || s[i] != t[i] ) { if ( i > n ) add(--i); add(i); }
	cnts[0] = cnts[1] = 0;
	//this is firon
	For(i, m + 1, n) cnts[s[i] == c[1]]++;
	if ( cnts[0] || cnts[1] )
	{
		if ( !cnts[0] || !cnts[1] ) add(m + 1), cnts[!cnts[1]] = 2;
		o = !( a[0] & 3 ), p = find(s + m + 1, s + n + 1, c[o]) - s;
		for ( ; cnts[!o] % a[!o] ; add(p++), cnts[!o] += 2 );
		for ( p = m ; ( p = find(s + p + 1, s + n + 1, c[o]) - s ) <= n ; )
		{
			for ( q = p + 1 ; q <= n && s[q] == c[o] ; q++ ); if ( q > n ) break;
			for ( ; ( q - p ) % a[o] ; add(q++) );
			for ( ; q != p ; sub(p), q -= a[o] );
		}
		if ( p <= n )
		{
			for ( ; q - p >= a[o] ; sub(p), q -= a[o] );
			for ( ; ( q - p ) & 3 ; sub(p - 1), q += a[o] ) For(i, 1, a[o]) add(p + i - 2);
			for ( r = p ; r != q ; sub(r - 1), add(r + a[!o] - 1), sub(r), r += 2, q -= 2 )
				For(i, 2, a[!o]) add(r + i - 2);
			for ( p--, q-- ; ( q - p ) % a[o] ; add(q++) );
			for ( ; q != p ; sub(q + 1), sub(p), q -= a[o] );
		}
		while ( cnts[!o] ) sub(m + 1), cnts[!o] -= a[!o];
	}
	cout << ans.size() << '\n';
	for ( auto _ : ans ) cout << get<0>(_) << get<1>(_) << ' ' << get<2>(_) << '\n';
}
int main()
{
	// this is firon
	cin.tie(nullptr) -> sync_with_stdio(false);
	int t; cin >> t; while ( t-- ) work(); return 0;
}
