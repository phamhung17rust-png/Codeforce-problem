#include<iostream>
#include<algorithm>
const int sz=2e5+10;
int a[sz];
std::string s;
int dfs(int l,int r,int d,int x){
  if(l>r)return 0;
  if(l==r)return a[l]=x;
  if(s[l]==s[r]){
    a[l]=x,a[r]=std::max(x,dfs(l+1,r-1,1,x+1))+1;
    if(s[r]=='R')std::swap(a[l],a[r]);
    return std::max(a[l],a[r]);
  }
  if(s[l]=='L')return a[l]=a[r]=x,std::max(x,dfs(l+1,r-1,d,x+1));
  if(d==1)a[0]=-1;
  return std::fill(a+l,a+r+1,x+1),x+1;
}
int main(){
  std::ios::sync_with_stdio(false);
  std::cin.tie(nullptr);
  int t;
  std::cin>>t;
  while(t--){
    int n;
    std::cin>>n>>s,s=" "+s;
    a[0]=0,dfs(1,n,-1,0);
    if(a[0]==-1)std::cout<<"-1";
    else for(int i=1;i<=n;i++)std::cout<<a[i]<<" ";
    std::cout<<"\n";
  }
  return 0;
}
