#include<bits/stdc++.h>
#define FASTIO ios::sync_with_stdio(0),cin.tie(0),cout.tie(0)
#define rep(i,l,r) for(int i=(l); i<=(r); ++i)
#define drep(i,r,l) for(int i=(r); i>=(l); --i)
using namespace std;
#define int long long
const int N=3e5+5,INF=1e18;
int _,n,d,a[N],b[N],g[N],h[N],B[N],L[N],R[N];
vector<int>f[N];
#define mid (l+r>>1)
#define F(i,j) f[i][j-B[i]]
inline void cmin(int&x,int v) {x=x<v?x:v;}
inline void sol(int l,int r,int L,int R) {
	if(l>r) return;
	int p=max(L,mid-d),v=INF;
	rep(i,p,min(R,mid)) if(v>h[i]+b[mid-i]) v=h[i]+b[mid-i],p=i;
	g[mid]=v,sol(l,mid-1,L,p),sol(mid+1,r,p,R);
}
inline void trans(int u,int v,int l,int r,int p) {
	rep(i,l,r) h[i-l]=F(u,i);
	sol(0,r-l+d,0,r-l);
	rep(i,p,p+r-l+d) cmin(F(v,i),g[i-p]);
}
inline void sol(int l,int r,bool F) {
	if(F) {
		L[r]=B[r]=L[l],R[r]=R[l]+r-l,f[r].resize(R[r]-L[r]+1);
		rep(i,L[r],R[r]) F(r,i)=INF;
	}
	if(R[l]*2>=r) {
		d=0;rep(i,l+1,r) if(~a[i]) b[++d]=a[i];
		sort(b+1,b+d+1);rep(i,1,d) b[i]+=b[i-1];
		int p=(r+1)>>1;
		trans(l,r,p,R[l],p+r-l-d),trans(l,r,L[l],l-p,L[l]);
		L[l]=l-p+1,R[l]=p-1;
	}
	if(r-l<=1) rep(i,L[l],R[l]) {
		if(~a[r]) cmin(F(r,i),F(l,i)),cmin(F(r,i+1),F(l,i)+a[r]);
		else cmin(F(r,i+(i*2>=l)),F(l,i));
	} else sol(l,mid,1),sol(mid,r,0);
}
inline void sol() {
	cin>>n;
	rep(i,1,n) cin>>a[i];
	B[0]=L[0]=R[0]=0,f[0].resize(1),f[0][0]=0,sol(0,n,1);
	drep(i,n,1) cmin(f[n][i-1],f[n][i]);
	rep(i,0,n) cout<<f[n][i]<<' ';
	cout<<'\n';
}
signed main() {
	FASTIO;
	cin>>_;
	while(_--) sol();
}
